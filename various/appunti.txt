inserire ProvaFinaleAPI nell'oggetto delle mail

                                  Valgrind

valgrind memcheck --> controlla se l'accesso alla memoria è tutto ok
                      può segnalare che ci sono blocchi non deallocati (possibly lost)

callgrind --> serve per vedere quale parte di codice è più lenta
kcachegrind --> visualizza l'output di callgrind, fa vedere la percentuale di tempo usata da ogni funzione

valgrind massif --> fa vedere il tempo di esecuzione e la memoria su un unico grafico, utile se si eccede il limite di memoria
massif-visualizer --> visualizza il file di output


                                    GDB

debugger, permette di eseguire una istruzione alla volta

comandi:

  run --> runna il programma
  break numeroLinea --> imposta un breakpoint (il programma verrà eseguito fino a una riga prima di li)
  next --> continua l'esecuzione di un passo
  list --> fa vedere a che punto siamo del codice

  i breakpoint si possono impostare anche mentre si sta eseguendo il programma in gdb

  continue --> arriva al prossimo breakpoint
  print --> fa vedere quale valore ha una variabile

  si possono modificare i valori delle variabili se ci sono valori inaspettati
  print variabile = valore --> imposta il valore nella variabile mentre è runnato in gdb


                                    run

per runnare leggendo da stdin -->  cat file.txt | ./main

                                      Note

Non ci sono test con nome lunghi per rompere il programma (non c'è però limite alla lunghezza)

sono possibile autoanelli

se ci sono riferimenti a entità non create il comando va ignorato
